name: Continuous Integration (Lambda Layer)

on:
  push:
    branches: [ "main" ]
    paths:
      - "src/aws_lambda_layers/**"
      - 'README.md'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Deploy to lambda
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Ensures we get the previous commit for diff

      - name: Detect workflow file changes
        id: check
        run: |
        run: |
          $changedFiles = git diff --name-only HEAD^ HEAD
          Write-Host "Changed files:`n$changedFiles"

          $workflowChanged = $false
          foreach ($file in $changedFiles -split "`n") {
            if ($file -like ".github/workflows/*") {
              $workflowChanged = $true
              exit 1
            }
          }

          if ($workflowChanged) {
            Write-Host "Workflow file was changed."
            echo "::set-output name=workflow_changed::true"
          } else {
            Write-Host "No workflow file changes detected."
            echo "::set-output name=workflow_changed::"
          }

      - name: List files (for debugging)
        run: ls -R

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1


      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          $layer_name = 'example'
          Set-Variable temp_layer_folder_path -Option Constant -Value '${{ vars.LAMBDA_LAYER_BUILD_FILE_PATH }}'
          $pip_output_path = Join-Path $temp_layer_folder_path "$layer_name/python"
          New-Item -ItemType Directory -Path $pip_output_path
          $layer_requirements_path = Join-Path '${{ vars.LAMBDA_LAYER_SRC_FILE_PATH }}' "$($layer_name)_layer_requirements.txt"
          Write-Host $layer_requirements_path
          pip install -r $layer_requirements_path --target $pip_output_path

          Compress-Archive $pip_output_path -DestinationPath '${{ vars.LAMBDA_LAYER_ZIP_FILE_PATH }}' -Force

      - name: Create AWS Lambda Function artifact
        uses: actions/upload-artifact@v4
        with:
          name: aws-lambda-layer                  # Name of the artifact (aws-lambda-layer.zip)
          path: |                                 # Note: Use unix style path (./). Does not work with Windows style path (.\).
            ${{ vars.LAMBDA_LAYER_BUILD_FILE_PATH }}

      - name: Deploy AWS Lambda Layer
        run: |
          $layer_name = 'example_layer'
          $ZipFilePath = '${{ vars.LAMBDA_LAYER_ZIP_FILE_PATH }}'
          aws lambda publish-layer-version `
          --layer-name $layer_name `
          --zip-file fileb://$ZipFilePath `
          --description "Layer for sending HTTP requests" `
          --compatible-runtimes python3.10 `
          --compatible-architectures x86_64 `
          --license-info AGPL-3.0-or-later

      - name: List files (for debugging)
        run: ls -R