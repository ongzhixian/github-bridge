name: Continuous Integration (Lambda Layer)

on:
  push:
    branches: [ "main" ]
    paths:
      - "src/aws_lambda_layers/**"
      - ".github/workflows/deploy-lambda-layer.yml"
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Deploy to lambda
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - uses: actions/checkout@v4

      - name: List files (for debugging)
        run: ls -R

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1


      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          # cache: 'pip' # caching pip dependencies
      
      - name: Install dependencies
        run: |
          $layer_name = 'example'
          Set-Variable temp_layer_folder_path -Option Constant -Value './temp-layer'
          $pip_output_path = Join-Path $temp_layer_folder_path "$layer_name/python"
          New-Item -ItemType Directory -Path $pip_output_path
          pip install -r ./src/aws_lambda_layers/$($layer_name)_layer_requirements.txt --target $pip_output_path

          Set-Variable publish_folder_path -Option Constant -Value './publish'
          $publish_filename = "$($layer_name).zip"
          $publish_file_path = Join-Path $publish_folder_path $publish_filename
          Compress-Archive $pip_output_path -DestinationPath $publish_file_path -Force

